trigger: none

pool:
  name: Default

parameters:
  - name: userEmail
    type: string
    default: ''
  
variables:
  ADO_ORG: 'tejaraghumandala0'

steps:
- powershell: |
    if (-not "${{ parameters.userEmail }}") {
      Write-Error "User email is required."
      exit 1
    }

    $auth = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(":$(ADO_PAT)"))
    $headers = @{ Authorization = "Basic $auth" }

    $organization = "$(ADO_ORG)"
    $emailToCheck = "${{ parameters.userEmail }}"
    $top = 1500
    $skip = 0

    $url = "https://vsaex.dev.azure.com/$organization/_apis/userentitlements?api-version=4.1-preview.1&skip=$skip&top=$top"

    Write-Output "Fetching users from Azure DevOps organization '$organization'..."

    try {
      $response = Invoke-RestMethod -Uri $url -Headers $headers
    } catch {
      Write-Error "Failed to call Azure DevOps API: $_"
      exit 1
    }

    $userFound = $false
    foreach ($userEntry in $response.value) {
      if ($userEntry.user.principalName -and $userEntry.user.principalName.ToLower() -eq $emailToCheck.ToLower()) {
        Write-Output "User found: $($userEntry.user.principalName)"
        $userFound = $true
        break
      }
    }

    if (-not $userFound) {
      Write-Error "User with email '$emailToCheck' not found in the organization."
    }
    else{
      Write-Error "User with email '$emailToCheck' found in the organization."
    }
  displayName: 'Check if user exists in Azure DevOps org'
